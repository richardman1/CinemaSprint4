<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Adress" xml:space="preserve">
    <value>Adres:</value>
  </data>
  <data name="AdressInvalid" xml:space="preserve">
    <value>Vul een geldig adres in</value>
  </data>
  <data name="AdressNumber" xml:space="preserve">
    <value>Nummer:</value>
  </data>
  <data name="AdressRequired" xml:space="preserve">
    <value>Vul een adres is</value>
  </data>
  <data name="ButtonCancel" xml:space="preserve">
    <value>Annuleren</value>
  </data>
  <data name="ButtonNext" xml:space="preserve">
    <value>Volgende</value>
  </data>
  <data name="ButtonPay" xml:space="preserve">
    <value>Betalen</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>Woonplaats:</value>
  </data>
  <data name="CityInvalid" xml:space="preserve">
    <value>Vul een geldige woonplaats in</value>
  </data>
  <data name="CityRequired" xml:space="preserve">
    <value>Vul een plaats in</value>
  </data>
  <data name="CodeSuccess" xml:space="preserve">
    <value>U kunt uw bestelling ophalen met de volgende code: </value>
  </data>
  <data name="ComingSoon" xml:space="preserve">
    <value>Binnenkort verwacht</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Uw Email:</value>
  </data>
  <data name="EmailExists" xml:space="preserve">
    <value>U heeft zich al aangemeld voor de nieuwsbrief</value>
  </data>
  <data name="EmailInvalid" xml:space="preserve">
    <value>Email is niet geldig</value>
  </data>
  <data name="EmailNotFound" xml:space="preserve">
    <value>Het email adres kon niet gevonden worden</value>
  </data>
  <data name="EmailRemoved" xml:space="preserve">
    <value>Het email adres is verwijderd</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Vul uw email in</value>
  </data>
  <data name="EmailSubscribed" xml:space="preserve">
    <value>U hebt zich succesvol aangemeld voor de nieuwsbrief van CinemA</value>
  </data>
  <data name="HomePopular" xml:space="preserve">
    <value>Populaire films</value>
  </data>
  <data name="HomeTickets" xml:space="preserve">
    <value>Koop hier je tickets!</value>
  </data>
  <data name="HomeWelcome" xml:space="preserve">
    <value>Welkom bij CinemA. Een onvergetelijke filmervaring.</value>
  </data>
  <data name="InfoSucces1" xml:space="preserve">
    <value>Deze code kunt u invoeren bij de touchscreens bij de bioscoop.</value>
  </data>
  <data name="InfoSucces2" xml:space="preserve">
    <value>Onthoud deze code goed of bewaar deze op de email die u nu zult ontvangen.</value>
  </data>
  <data name="InfoSucces3" xml:space="preserve">
    <value>U kunt uw kaarten ook uitprinten met het pdf bestand dat nu gedownload wordt.</value>
  </data>
  <data name="MenuCinemas" xml:space="preserve">
    <value>Bioscopen</value>
  </data>
  <data name="MenuHome" xml:space="preserve">
    <value>Hoofdpagina</value>
  </data>
  <data name="MenuMovies" xml:space="preserve">
    <value>Films</value>
  </data>
  <data name="MenuNews" xml:space="preserve">
    <value>Nieuwsbrief</value>
  </data>
  <data name="MenuNow" xml:space="preserve">
    <value>Deze week te zien</value>
  </data>
  <data name="MovieClassification" xml:space="preserve">
    <value>Kijkwijzer</value>
  </data>
  <data name="MovieDescription" xml:space="preserve">
    <value>NL</value>
  </data>
  <data name="MovieDirector" xml:space="preserve">
    <value>Regisseur</value>
  </data>
  <data name="MovieDuration" xml:space="preserve">
    <value>Duur</value>
  </data>
  <data name="MovieGenre" xml:space="preserve">
    <value>Genre</value>
  </data>
  <data name="MovieLanguage" xml:space="preserve">
    <value>Taal</value>
  </data>
  <data name="MovieOverviewHeader" xml:space="preserve">
    <value>Overzicht alle films</value>
  </data>
  <data name="MovieRating" xml:space="preserve">
    <value>IMDB Rating</value>
  </data>
  <data name="MovieSpecs" xml:space="preserve">
    <value>Informatie</value>
  </data>
  <data name="MovieSubtitles" xml:space="preserve">
    <value>Ondertiteling</value>
  </data>
  <data name="MovieTicketHeader" xml:space="preserve">
    <value>Tickets en tijden</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Uw naam:</value>
  </data>
  <data name="NameLong" xml:space="preserve">
    <value>Naam bevat te veel tekens</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>Vul uw naam in</value>
  </data>
  <data name="NewsletterHeader" xml:space="preserve">
    <value>Nieuwsbrief</value>
  </data>
  <data name="NewsletterInfo" xml:space="preserve">
    <value>Voor de laatste nieuwtjes en acties kunt u zich aanmelden voor de nieuwsbrief. U ontvangt elke 2 weken de CinemA InfoLetter in uw mailbox.</value>
  </data>
  <data name="NowOverviewHeader" xml:space="preserve">
    <value>Films deze week</value>
  </data>
  <data name="NumberInvalid" xml:space="preserve">
    <value>Vul een geldig nummer in</value>
  </data>
  <data name="NumberRequired" xml:space="preserve">
    <value>Vul een nummer in</value>
  </data>
  <data name="OrderChoice" xml:space="preserve">
    <value>Film Keuze</value>
  </data>
  <data name="OrderHeader" xml:space="preserve">
    <value>Bestel Tickets</value>
  </data>
  <data name="OrderSeats" xml:space="preserve">
    <value>Totaal aantal beschikbare stoelen:</value>
  </data>
  <data name="OrderTableAmount" xml:space="preserve">
    <value>Aantal kaartjes</value>
  </data>
  <data name="OrderTablePrice" xml:space="preserve">
    <value>Prijs</value>
  </data>
  <data name="OrderTableTariff" xml:space="preserve">
    <value>Tarief</value>
  </data>
  <data name="OrderTableTotal" xml:space="preserve">
    <value>Totaal</value>
  </data>
  <data name="OverviewToday" xml:space="preserve">
    <value>De films voor vandaag</value>
  </data>
  <data name="PaymentHeader" xml:space="preserve">
    <value>Betaling</value>
  </data>
  <data name="PaymentRequired" xml:space="preserve">
    <value>Vul een betaalwijze in</value>
  </data>
  <data name="PaymentReserve" xml:space="preserve">
    <value>Reserveer nu</value>
  </data>
  <data name="PaymentSuccess" xml:space="preserve">
    <value>Uw betaling is geslaagd!</value>
  </data>
  <data name="PaymentType" xml:space="preserve">
    <value>Kies betaalwijze:</value>
  </data>
  <data name="Questionnaire" xml:space="preserve">
    <value>Enquete</value>
  </data>
  <data name="Review" xml:space="preserve">
    <value>Recenseer een movie</value>
  </data>
  <data name="Screen" xml:space="preserve">
    <value>Zaal</value>
  </data>
  <data name="Subscribe" xml:space="preserve">
    <value>Aanmelden</value>
  </data>
  <data name="Unsubscribe" xml:space="preserve">
    <value>Afmelden</value>
  </data>
  <data name="ZipCode" xml:space="preserve">
    <value>Postcode:</value>
  </data>
  <data name="ZipCodeInvalid" xml:space="preserve">
    <value>Vul een geldige postcode in</value>
  </data>
  <data name="ZipCodeRequired" xml:space="preserve">
    <value>Vul een postcode in</value>
  </data>
</root>